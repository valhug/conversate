# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next/
out/

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# Turbo
.turbo/

# Build outputs
build/
dist/
*.tsbuildinfo

# IDE files
.vscode/
.idea/
.cursor/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
Desktop.ini

# Logs
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# 0x
profile-*

# mac files
.DS_Store

# vim swap files
*.swp

# webstorm
.idea/

# vscode
.vscode/
*.code-workspace

# rushjs
common/deploy/
common/temp/
common/autoinstallers/*/.npmrc
**/.rush/temp/

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Local environment files
.env.local
.env.development.local
.env.test.local
.env.production.local

# Vercel
.vercel

# Storybook build outputs
.out
.storybook-out
storybook-static

# Temporary files
*.tmp
*.temp

# Database
*.sqlite
*.sqlite3
*.db

# Testing
/coverage
/.nyc_output

# Docker
Dockerfile.prod
docker-compose.override.yml

# Kubernetes
*.kubeconfig

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# AWS
.aws/

# CI/CD
.github/workflows/*.yml
!.github/workflows/main.yml

# Package manager lock files (optional - uncomment if you want to ignore them)
# package-lock.json
# yarn.lock
# pnpm-lock.yaml

# TypeScript build info
web/tsconfig.tsbuildinfo
ui/tsconfig.tsbuildinfo
shared/tsconfig.tsbuildinfo

# Generated files
web/.next/
web/out/
ui/dist/
shared/dist/

# Uploads (for development)
uploads/
media/
public/uploads/

# User data
user-data/
speech-signatures/
conversation-logs/

# Audio/video processing temporary files
*.wav.tmp
*.mp3.tmp
*.mp4.tmp
processing/

# Machine learning models (if any)
models/
*.model
*.pkl
*.joblib

# Security
*.pem
*.key
*.crt
*.csr
.secrets/

# Backup files
*.bak
*.backup
*.old

# Language-specific ignores
# Python (if you add Python microservices later)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/
env.bak/
venv.bak/

# Java (if you add Java microservices later)
*.class
*.jar
*.war
*.ear
target/

# Go (if you add Go microservices later)
*.exe
*.exe~
*.dll
*.so
*.dylib
vendor/

# Redis dump files
dump.rdb

# PostgreSQL
*.sql.backup

# Local development docker volumes
postgres_data/
redis_data/
